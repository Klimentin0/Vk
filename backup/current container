package main

import (
	"context"
	"fmt"
	"log"
	"os"
	"strings"

	"github.com/docker/docker/api/types"
	"github.com/docker/docker/client"
)

func getCurrentContainerID() string {
	hostname, err := os.Hostname()
	if err != nil {
		log.Println("Error getting hostname:", err)
		return ""
	}

	ctx := context.Background()
	cli, err := client.NewClientWithOpts(client.FromEnv, client.WithAPIVersionNegotiation())
	if err != nil {
		log.Println("Error creating Docker client:", err)
		return ""
	}
	defer cli.Close()

	containers, err := cli.ContainerList(ctx, types.ContainerListOptions{})
	if err != nil {
		log.Println("Error listing containers:", err)
		return ""
	}

	for _, container := range containers {
		if strings.TrimPrefix(container.Names[0], "/") == hostname {
			return container.ID
		}
	}

	return ""
}

func main() {
	containerID := getCurrentContainerID()
	if containerID == "" {
		fmt.Println("Could not determine the current container ID. Are you running inside a Docker container?")
	} else {
		fmt.Printf("Current container ID: %s\n", containerID)
	}
}
